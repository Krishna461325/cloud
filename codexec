import subprocess

class CommandExecutor:
    def __init__(self):
        self.session = None
        self.process = None
    
    def open_session(self, command):
        self.session = subprocess.Popen(command,
                                        stdin=subprocess.PIPE,
                                        stdout=subprocess.PIPE,
                                        stderr=subprocess.PIPE,
                                        shell=True,
                                        universal_newlines=True)
        self.process = self.session.stdin
    
    def send_command(self, command):
        self.process.write(command + '\n')
        self.process.flush()
        output = self.session.stdout.readline().rstrip()
        return output
    
    def run_script(self, script_path):
        with open(script_path, 'r') as script_file:
            script_content = script_file.read()
        return self.send_command(script_content)
    
    def close_session(self):
        if self.session is not None:
            self.session.stdin.close()
            self.session.stdout.close()
            self.session.stderr.close()
            self.session.terminate()
            self.session = None
            self.process = None
executor = CommandExecutor()
executor.open_session('powershell.exe')

output = executor.send_command('Get-Process | Select-Object ProcessName, Id, WorkingSet | Sort-Object WorkingSet -Descending')
print(output)

executor.close_session()



def send_command(self, command):
    self.process.write(command + '\n')
    self.process.flush()
    output = ''
    while True:
        chunk = self.session.stdout.read(1024).decode('utf-8')
        if not chunk:
            break
        output += chunk
    output_lines = output.split('\n')
    return output_lines[-2]

